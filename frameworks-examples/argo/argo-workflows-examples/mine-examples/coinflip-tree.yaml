apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: treestructured
  annotations:
    workflows.argoproj.io/description: |
      This is an example of coinflips with a tree tree-structured
spec:
  entrypoint: coinflip
  templates:
  - name: coinflip
    steps:
    - - name: flip-coin
        template: flip-coin
    - - name: one
        template: one
        when: "{{steps.flip-coin.outputs.result}} == 1"
    - - name: two
        template: two
        when: "{{steps.flip-coin.outputs.result}} == 2"
    - - name: three
        template: three
        when: "{{steps.flip-coin.outputs.result}} == 3"

  - name: flip-coin
    script:
      image: python:alpine3.6
      command: [python]
      source: |
        import random
        result = random.randint(1,3)
        print(result)
      resources:
        requests:
          memory: "64Mi"
          cpu: "250m"
        limits:
          memory: "128Mi"
          cpu: "500m"

  - name: one
    container:
      image: alpine:3.6
      command: [sh, -c]
      args: ["echo \"it was one\""]

  - name: two
    container:
      image: alpine:3.6
      command: [sh, -c]
      args: ["echo \"it was two\""]

  - name: three
    container:
      image: alpine:3.6
      command: [sh, -c]
      args: ["echo \"it was three\""]